pipelines:
  - name: create_jfrog_jenkins_plugin_snapshot
    configuration:
      runtime:
        type: image
        image:
          custom:
            name: releases-docker.jfrog.io/jfrog-ecosystem-integration-env
            tag: 1.9.0

    steps:
      - name: Snapshot
        type: Bash
        configuration:
          inputResources:
            - name: jenkinsJFrogSnapshotGit
          integrations:
            - name: entplus_deployer
        execution:
          onStart:
            # Save gradle cache
            - restore_cache_files m2_home ${HOME}/.m2
          onExecute:
            - cd $res_jenkinsJFrogSnapshotGit_resourcePath

            # Set env
            - export CI=true
            - export JFROG_BUILD_STATUS=PASS
            - export JFROG_CLI_BUILD_NAME=ecosystem-jfrog-jenkins-plugin-dev
            - export JFROG_CLI_BUILD_NUMBER=$run_number
            - export JFROG_CLI_BUILD_PROJECT=ecosys

            # Configure JFrog CLI
            - curl -fL https://install-cli.jfrog.io | sh
            - jf c rm --quiet
            - jf c add internal --url=$int_entplus_deployer_url --user=$int_entplus_deployer_user --password=$int_entplus_deployer_apikey
            - jf mvnc --repo-resolve-releases ecosys-jenkins-repos --repo-resolve-snapshots ecosys-releases-snapshots --repo-deploy-snapshots ecosys-oss-snapshot-local --repo-deploy-releases ecosys-oss-release-local

            # Run audit
            - jf audit --fail=false

            # Delete former snapshots to make sure the release bundle will not contain the same artifacts
            - jf rt del "ecosys-oss-snapshot-local/org/jenkins-ci/plugins/jfrog/*" --quiet

            # Run install and publish
            - >
              env -i PATH=$PATH M2_HOME=$M2_HOME HOME=$HOME
              JFROG_CLI_BUILD_NAME=$JFROG_CLI_BUILD_NAME
              JFROG_CLI_BUILD_NUMBER=$JFROG_CLI_BUILD_NUMBER
              JFROG_CLI_BUILD_PROJECT=$JFROG_CLI_BUILD_PROJECT
              jf mvn clean install -U -B javadoc:jar source:jar -Denforcer.skip -DskipTests
            - jf rt bag && jf rt bce
            - jf rt bp

            # Distribute release bundle
            - jf ds rbc jfrog-jenkins-plugin-snapshot $run_number --spec=./.jfrog-pipelines/specs/dev-rbc-filespec.json --sign
            - jf ds rbd jfrog-jenkins-plugin-snapshot $run_number --site="releases.jfrog.io" --sync

          onComplete:
            # Save .m2 cache
            - add_cache_files ${HOME}/.m2 m2_home
